<%#
/**
 * @template Homepage
 * @description Main landing page template for PlantPal application
 * 
 * Features:
 * - Responsive grid layout for plant cards
 * - Filter controls for plant types
 * - Sort options (date, type, name)
 * - Add plant button
 * - PWA support with service worker
 * - Offline functionality
 * 
 * Required Scripts:
 * - connectivityCheck.js - Network status monitoring
 * - userIDBUtility.js - User data storage
 * - homepageScript.js - Main homepage logic
 * - homepageRenderScript.js - Plant list rendering
 */
%>

<!DOCTYPE html>
<html lang="en" data-theme="cupcake">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="PlantPal - Homepage">
    <title>PlantPal - Homepage</title>
    <link rel="stylesheet" href="/css/outputStyles.css" />
    <link rel="manifest" href="/manifest.json" />

    <!-- PWA icons -->
    <link rel="apple-touch-icon" href="/images/icon-192.png">
    <link rel="apple-touch-icon" sizes="512x512" href="/images/icon-512.png">
    <meta name="theme-color" content="#4CAF50">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
    <meta name="apple-mobile-web-app-title" content="PlantPal">
    
    <!-- Scripts -->
    <script src="/javascripts/utils/connectivityCheck.js" defer></script>
    <script src="/javascripts/utils/notificationUtility.js" defer></script>
    <script src="/javascripts/user/userIDBUtility.js" defer></script>
    <script src="/javascripts/user/userScript.js" defer></script>
    <script src="/javascripts/user/userRenderScript.js" defer></script>
    <script src="/javascripts/addPlant/addPlantUtility.js" defer></script>
    <script src="/javascripts/homepage/homepageScript.js" defer></script>
    <script src="/javascripts/homepage/homepageRenderScript.js" defer></script>
    
    <!-- Register Service Worker -->
    <script>
        // Register service worker for PWA functionality
        if ("serviceWorker" in navigator) {
            window.addEventListener('load', () => {
                navigator.serviceWorker.register("/serviceWorker.js", {
                    scope: "/",
                }).then((registration) => {
                    console.log("Service Worker registered successfully:", registration);
                    
                    // Check for updates
                    registration.addEventListener('updatefound', () => {
                        console.log('Service Worker update found');
                        const newWorker = registration.installing;
                        newWorker.addEventListener('statechange', () => {
                            if (newWorker.state === 'installed' && navigator.serviceWorker.controller) {
                                console.log('New content is available; please refresh.');
                            }
                        });
                    });
                }).catch((error) => {
                    console.error("Service Worker registration failed:", error);
                });
            });
        }
    </script>
</head>
<body onload="init()">
    <!--Include the header component at the top-->
    <%- include('../components/header.ejs') %>
    
    <!--Main container -->
    <div class="flex flex-col min-h-screen pt-20">

        <!--Filter and sort controls-->
        <div class="bg-base-100 shadow-md p-4 flex flex-col lg:flex-row gap-4 items-center justify-between">
            <!--Filter by type-->
            <div class="flex items-center gap-2 w-full lg:w-auto">
                <label for="typeFilter" class="font-bold text-gray-700 text-sm lg:text-base whitespace-nowrap">Filter:</label>
                <select id="typeFilter" class="select select-bordered w-full max-w-xs text-sm lg:text-base" onchange="filterByType()">
                    <option value="all">All Types</option>
                    <option value="succulent">Succulent</option>
                    <option value="fern">Fern</option>
                    <option value="houseplant">Houseplant</option>
                    <option value="vegetable">Vegetable</option>
                    <option value="flowering">Flowering</option>
                    <option value="herb">Herb</option>
                    <option value="other">Other</option>
                </select>
            </div>

            <!--Controls -->
            <div class="flex items-center gap-4 w-full lg:w-auto">
                <!--Sort Controls-->
                <div class="dropdown dropdown-bottom">
                    <div tabindex="0" role="button" aria-label="Sort options" class="btn btn-circle bg-gray-200 text-gray-600 border-2 border-gray-400 shadow-sm hover:bg-gray-300">
                        <svg class="w-8 h-8" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
                            <path fill="currentColor" d="M3.9 54.9C10.5 40.9 24.5 32 40 32H472c15.5 0 29.5 8.9 36.1 22.9s4.6 30.5-5.2 42.5L320 320.9V448c0 12.1-6.8 23.2-17.7 28.6s-23.8 4.3-33.5-3l-64-48c-8.1-6-12.8-15.5-12.8-25.6V320.9L9 97.3C-.7 85.4-2.8 68.8 3.9 54.9z"/>
                        </svg>
                    </div>
                    <ul tabindex="0" class="dropdown-content z-50 menu p-2 shadow bg-base-100 rounded-box w-48">
                        <li><a onclick="sortList('date')" class="whitespace-nowrap text-base">Sort By Date</a></li>
                        <li><a onclick="sortList('name')" class="whitespace-nowrap text-base">Sort By Name</a></li>
                        <li><a onclick="sortList('type')" class="whitespace-nowrap text-base">Sort By Type</a></li>
                    </ul>
                </div>

                <!--Add Plant Button-->
                <button 
                    class="btn btn-primary w-full lg:w-auto text-sm lg:text-base"
                    onclick="openAddPlantPage()"
                >
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <circle cx="12" cy="12" r="10"/>
                        <path d="M12 8v8M8 12h8"/>
                    </svg>
                    Add Plant
                </button>
            </div>
        </div>

        <!--Grid layout for displaying the list of plants-->
        <div class="flex-1 grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6 p-6" id="plantList">
            <!--Plant cards will be dynamically inserted here-->
        </div>
    </div>
    <!--Include the online/offline mode component-->
    <%- include('../components/onlineOfflineMode.ejs') %>
</body>
</html>