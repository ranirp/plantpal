<%#
/**
 * @template PlantDetails
 * @description Combined plant details and chat interface
 * 
 * Features:
 * - Split-screen layout (details + chat)
 * - Offline plant data support
 * - Real-time chat integration
 * - Responsive design
 * - Online/offline mode indicator
 * - Back navigation button
 * 
 * Required Data:
 * @param {Object} data - Plant details
 * @param {string} data._id - Plant ID
 * @param {string} data.nickname - Plant owner's nickname
 * @param {boolean} isOfflineMode - Whether app is in offline mode
 * @param {boolean} data.isOfflinePlant - Whether plant was created offline
 * @param {string} username - Current user's username
 * 
 * Components:
 * - plantDetailsComponent.ejs - Plant information display
 * - chat.ejs - Chat interface
 * - onlineOfflineMode.ejs - Connection status indicator
 */
%>

<!DOCTYPE html>
<html data-theme="cupcake">
    <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, viewport-fit=cover" />
    <meta name="description" content="PlantPal">
    <title>PlantPal</title>
        <link rel="stylesheet" href="/css/outputStyles.css" />
        <link rel="manifest" href="/manifest.json"/>
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
        <style>
            html {
                height: -webkit-fill-available;
            }
            body {
                min-height: 100vh;
                min-height: -webkit-fill-available;
                width: 100%;
                overflow-x: hidden;
            }
            /* Fix for PWA installed app mode */
            @media all and (display-mode: standalone) {
                body {
                    padding: env(safe-area-inset-top) env(safe-area-inset-right) env(safe-area-inset-bottom) env(safe-area-inset-left);
                }
                .flex.flex-col.h-screen {
                    min-height: 100vh;
                    min-height: -webkit-fill-available;
                }
            }
            /* Back button styles */
            .back-button {
                position: absolute;
                top: 16px;
                left: 16px;
                z-index: 10;
                transition: all 0.2s ease;
            }
            .back-button:hover {
                transform: translateX(-2px);
            }
            .back-button:active {
                transform: scale(0.95);
            }
        </style>
        <script src="/javascripts/utils/notificationUtility.js" defer></script>
        <script defer>
            var loggedInUser = "<%= username %>";
            var plantId = "<%= Buffer.from(data._id.toString()).toString('base64') %>"; // Base64 encoded plant ID
            var plantOwner = "<%= data.nickname %>";
            var isOfflineMode = "<%= (typeof isOfflineMode !== 'undefined' && isOfflineMode) ? 'true' : 'false' %>";
            var isOfflinePlant = "<%= data.isOfflinePlant ? 'true' : 'false' %>";
            
            // Back button handler
            function goBack() {
                if (window.history.length > 1) {
                    window.history.back();
                } else {
                    window.location.href = '/';
                }
            }
        </script>
        <% if (typeof isOfflineMode !== 'undefined' && isOfflineMode) { %>
        <!-- Load plant data from IndexedDB for offline plants -->
        <script src="/javascripts/addPlant/addPlantUtility.js"></script>
        <script>
            // Load offline plant data when page loads
            document.addEventListener('DOMContentLoaded', async function() {
                if (isOfflinePlant) {
                    console.log('üîÑ Loading offline plant data from IndexedDB...');
                    try {
                        const db = await openSyncPlantIDB();
                        const allPlants = await getAllPlantsFromIDB();
                        const decodedPlantId = atob(plantId); // Decode base64
                        
                        // Find the plant by ID
                        const plant = allPlants.find(p => p._id === decodedPlantId);
                        
                        if (plant) {
                            console.log('‚úÖ Found offline plant:', plant);
                            // Update the page with actual plant data
                            document.title = plant.plantName + ' - Plant Details (Offline)';
                            window.offlinePlantData = plant;
                        } else {
                            console.error('‚ùå Offline plant not found in IndexedDB');
                        }
                    } catch (error) {
                        console.error('‚ùå Error loading offline plant:', error);
                    }
                }
            });
        </script>
        <% } %>
    </head>
    <body class="bg-base-100">
        <div class="flex flex-col h-screen w-full lg:flex-row gap-4 p-4">
            <!-- Plant Details Section -->
            <div class="lg:w-1/2 h-full bg-white rounded-lg shadow-lg border border-gray-200 relative">
                <button 
                    onclick="goBack()" 
                    class="back-button bg-white hover:bg-gray-100 text-gray-700 p-2 rounded-full shadow-md border border-gray-200"
                    aria-label="Go back"
                    title="Go back"
                >
                    <i class="fas fa-arrow-left text-lg"></i>
                </button>
                
                <div class="h-full overflow-y-auto">
                    <%- include('./plantDetailsComponent.ejs', { data: data}) %>
                </div>
            </div>

            <!-- Chat Section -->
            <div class="lg:w-1/2 h-full bg-white rounded-lg shadow-lg border border-gray-200">
                <div class="flex flex-col h-full">
                    <%- include('../chat/chat.ejs', { data: data, userName: username }) %>
                </div>
            </div>
        </div>
        
        <%- include('../components/onlineOfflineMode.ejs') %>
    </body>
</html>